/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    comments: Comment;
    courses: Course;
    ageGroups: AgeGroup;
    services: Service;
    testimonials: Testimonial;
    team: Team;
    faq: Faq;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    comments: CommentsSelect<false> | CommentsSelect<true>;
    courses: CoursesSelect<false> | CoursesSelect<true>;
    ageGroups: AgeGroupsSelect<false> | AgeGroupsSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    team: TeamSelect<false> | TeamSelect<true>;
    faq: FaqSelect<false> | FaqSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    siteSettings: SiteSetting;
    styleSettings: StyleSetting;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    siteSettings: SiteSettingsSelect<false> | SiteSettingsSelect<true>;
    styleSettings: StyleSettingsSelect<false> | StyleSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | FeaturesBlock
    | NewsletterCTABlock
    | TestimonialsBlock
    | FAQBlock
    | CourseArchiveBlock
    | AgeGroupsArchiveBlock
    | PostsArchiveBlock
    | RelumeHeaderBlock
    | RelumeLayoutBlock
    | RelumeCTABlock
    | RelumeGalleryBlock
    | RelumePricingBlock
    | RelumeTeamBlock
    | RelumeContactBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock".
 */
export interface FeaturesBlock {
  title: string;
  features?:
    | {
        icon?: (number | null) | Media;
        title: string;
        description?: string | null;
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'features';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsletterCTABlock".
 */
export interface NewsletterCTABlock {
  title: string;
  description?: string | null;
  buttonText?: string | null;
  image?: (number | null) | Media;
  /**
   * HTML toegestaan voor links
   */
  privacyText?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'newsletterCTA';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  title?: string | null;
  description?: string | null;
  /**
   * Selecteer tot 6 testimonials om weer te geven
   */
  testimonials: (number | Testimonial)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonials';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  name: string;
  /**
   * Bijvoorbeeld: "Moeder van 2", "Pedagoog", "Directeur"
   */
  role?: string | null;
  /**
   * Naam van kinderdagverblijf, school of gemeente (optioneel)
   */
  company?: string | null;
  content: string;
  rating: '1' | '2' | '3' | '4' | '5';
  /**
   * Optionele profielfoto
   */
  avatar?: (number | null) | Media;
  serviceUsed?: ('general' | 'course' | 'daycare' | 'municipality' | 'school') | null;
  /**
   * Toon deze testimonial op de homepage en andere belangrijke pagina's
   */
  featured?: boolean | null;
  tags?:
    | ('screen-time' | 'parenting' | 'education' | 'balance' | 'baby' | 'toddler' | 'preschooler' | 'elementary')[]
    | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  title?: string | null;
  description?: string | null;
  /**
   * Selecteer de vragen die je wilt weergeven in deze sectie
   */
  faqs: (number | Faq)[];
  /**
   * Laat leeg om alle geselecteerde vragen te tonen, of kies een categorie om alleen vragen uit die categorie te tonen
   */
  filterByCategory?:
    | (
        | ''
        | 'general'
        | 'screen-time'
        | 'baby'
        | 'toddler'
        | 'preschooler'
        | 'elementary'
        | 'courses'
        | 'daycare'
        | 'municipality'
        | 'school'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: number;
  question: string;
  answer: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  category:
    | 'general'
    | 'screen-time'
    | 'baby'
    | 'toddler'
    | 'preschooler'
    | 'elementary'
    | 'courses'
    | 'daycare'
    | 'municipality'
    | 'school'
    | 'technical';
  tags?:
    | (
        | 'parenting'
        | 'education'
        | 'balance'
        | 'safety'
        | 'development'
        | 'media'
        | 'apps'
        | 'games'
        | 'videos'
        | 'social-media'
      )[]
    | null;
  /**
   * Bepaalt de volgorde waarin vragen worden weergegeven binnen een categorie
   */
  order: number;
  /**
   * Schakel uit om tijdelijk te verbergen zonder te verwijderen
   */
  active?: boolean | null;
  /**
   * Markeer als deze vraag vaak als nuttig wordt beoordeeld door bezoekers
   */
  helpful?: boolean | null;
  /**
   * Koppel gerelateerde vragen die bezoekers ook interessant kunnen vinden
   */
  relatedQuestions?: (number | Faq)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CourseArchiveBlock".
 */
export interface CourseArchiveBlock {
  title?: string | null;
  description?: string | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection' | 'targetAudience') | null;
  targetAudience?: ('parents' | 'daycare' | 'schools' | 'municipalities')[] | null;
  limit?: number | null;
  selectedCourses?: (number | Course)[] | null;
  showCategories?: boolean | null;
  layout?: ('grid' | 'list') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'courseArchive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses".
 */
export interface Course {
  id: number;
  title: string;
  description: string;
  fullDescription?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image: number | Media;
  /**
   * Prijs in euro's
   */
  price: number;
  /**
   * Bijvoorbeeld: "4 weken" of "2 dagen"
   */
  duration: string;
  targetAudience?: ('parents' | 'daycare' | 'schools' | 'municipalities')[] | null;
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  sessions?:
    | {
        title: string;
        description?: string | null;
        duration?: string | null;
        id?: string | null;
      }[]
    | null;
  testimonials?: (number | Testimonial)[] | null;
  publishedAt?: string | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AgeGroupsArchiveBlock".
 */
export interface AgeGroupsArchiveBlock {
  title?: string | null;
  description?: string | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  selectedAgeGroups?: (number | AgeGroup)[] | null;
  limit?: number | null;
  layout?: ('grid' | 'list' | 'timeline') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ageGroupsArchive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ageGroups".
 */
export interface AgeGroup {
  id: number;
  title: string;
  /**
   * Bijvoorbeeld: "0-1 jaar" of "4-6 jaar"
   */
  ageRange: string;
  description: string;
  heroImage: number | Media;
  /**
   * Bepaalt de volgorde waarin leeftijdsgroepen worden weergegeven
   */
  order: number;
  content?:
    | {
        title: string;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        image?: (number | null) | Media;
        imagePosition?: ('left' | 'right') | null;
        id?: string | null;
      }[]
    | null;
  tips?:
    | {
        tip: string;
        id?: string | null;
      }[]
    | null;
  resources?:
    | {
        title: string;
        description?: string | null;
        link?: string | null;
        type?: ('article' | 'video' | 'app' | 'website' | 'book') | null;
        id?: string | null;
      }[]
    | null;
  faqs?: (number | Faq)[] | null;
  relatedCourses?: (number | Course)[] | null;
  publishedAt?: string | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostsArchiveBlock".
 */
export interface PostsArchiveBlock {
  title?: string | null;
  description?: string | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection' | 'category') | null;
  categories?: (number | Category)[] | null;
  selectedPosts?: (number | Post)[] | null;
  limit?: number | null;
  showCategories?: boolean | null;
  layout?: ('grid' | 'list' | 'magazine') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'postsArchive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeHeaderBlock".
 */
export interface RelumeHeaderBlock {
  variant: 'header-01' | 'header-05' | 'header-46' | 'header-47' | 'header-50' | 'header-54' | 'header-62';
  title: string;
  description?: string | null;
  /**
   * Primary action button (not available for simple centered variants)
   */
  primaryButton?: {
    text?: string | null;
    link?: string | null;
    show?: boolean | null;
  };
  /**
   * Secondary action button (not available for simple centered variants)
   */
  secondaryButton?: {
    text?: string | null;
    link?: string | null;
    show?: boolean | null;
  };
  /**
   * The main image displayed alongside content (only for side-by-side layouts)
   */
  image?: (number | null) | Media;
  /**
   * Background image for full-screen header variants
   */
  backgroundImage?: (number | null) | Media;
  imagePosition?: ('left' | 'right') | null;
  features?:
    | {
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Text alignment for centered layouts
   */
  alignment?: ('left' | 'center' | 'right') | null;
  /**
   * Opacity of the dark overlay on background image (0-100)
   */
  overlayOpacity?: number | null;
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'relumeHeader';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeLayoutBlock".
 */
export interface RelumeLayoutBlock {
  variant: 'layout-01' | 'layout-03' | 'layout-10' | 'layout-192' | 'layout-238' | 'layout-239';
  /**
   * Small text above the main title
   */
  tagline?: string | null;
  title: string;
  description?: string | null;
  primaryButton?: {
    text?: string | null;
    link?: string | null;
    variant?: ('primary' | 'secondary' | 'link') | null;
    show?: boolean | null;
  };
  secondaryButton?: {
    text?: string | null;
    link?: string | null;
    variant?: ('primary' | 'secondary' | 'link') | null;
    show?: boolean | null;
  };
  /**
   * Main image for two-column layouts
   */
  mainImage?: (number | null) | Media;
  imagePosition?: ('left' | 'right') | null;
  features?:
    | {
        icon?: (number | null) | Media;
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  columns?:
    | {
        /**
         * Icon for layout-238, image for layout-239
         */
        icon?: (number | null) | Media;
        title: string;
        description?: string | null;
        buttonText?: string | null;
        buttonLink?: string | null;
        id?: string | null;
      }[]
    | null;
  textAlignment?: ('left' | 'center' | 'right') | null;
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'relumeLayout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeCTABlock".
 */
export interface RelumeCTABlock {
  variant: 'cta-02' | 'cta-20' | 'cta-26';
  title: string;
  description?: string | null;
  /**
   * Image for two-column CTA layout
   */
  image?: (number | null) | Media;
  buttonText?: string | null;
  buttonVariant?: ('primary' | 'secondary') | null;
  emailPlaceholder?: string | null;
  privacyText?: string | null;
  alignment?: ('left' | 'center') | null;
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'relumeCTA';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeGalleryBlock".
 */
export interface RelumeGalleryBlock {
  /**
   * Choose the gallery layout style
   */
  variant?: ('gallery-04' | 'gallery-08') | null;
  /**
   * Main heading for the gallery section
   */
  title: string;
  /**
   * Optional description text below the title
   */
  description?: string | null;
  images?:
    | {
        /**
         * Select an image for the gallery
         */
        image: number | Media;
        /**
         * Add a link when users click on this image
         */
        link?: {
          type?: ('none' | 'reference' | 'custom') | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'relumeGallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumePricingBlock".
 */
export interface RelumePricingBlock {
  /**
   * Small text above the title
   */
  tagline?: string | null;
  /**
   * Main heading for the pricing section
   */
  title: string;
  /**
   * Description text below the title
   */
  description?: string | null;
  /**
   * Label for the monthly pricing tab
   */
  monthlyTabLabel?: string | null;
  /**
   * Label for the yearly pricing tab
   */
  yearlyTabLabel?: string | null;
  plans?:
    | {
        /**
         * Name of the pricing plan (e.g., "Basisplan")
         */
        name: string;
        /**
         * Monthly price display (e.g., "$19/mo")
         */
        monthlyPrice: string;
        /**
         * Yearly price display (e.g., "$180/yr")
         */
        yearlyPrice: string;
        /**
         * Optional discount text for yearly plan (e.g., "Bespaar 20% met het jaarplan")
         */
        yearlyDiscount?: string | null;
        features?:
          | {
              /**
               * Description of the feature included in this plan
               */
              text: string;
              id?: string | null;
            }[]
          | null;
        /**
         * Text for the call-to-action button
         */
        buttonText?: string | null;
        buttonLink?: {
          type?: ('reference' | 'custom') | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'relumePricing';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeTeamBlock".
 */
export interface RelumeTeamBlock {
  /**
   * Small text above the title
   */
  tagline?: string | null;
  /**
   * Main heading for the team section
   */
  title: string;
  /**
   * Description text below the title
   */
  description?: string | null;
  teamMembers?:
    | {
        /**
         * Professional headshot photo
         */
        photo: number | Media;
        /**
         * Team member's full name
         */
        name: string;
        /**
         * Team member's role or job title
         */
        position: string;
        /**
         * Brief description of their expertise or role
         */
        bio: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Social media links for team members. Associate each link with a team member.
   */
  socialLinks?:
    | {
        /**
         * Enter the exact name of the team member this link belongs to
         */
        teamMember: string;
        platform: 'linkedin' | 'twitter' | 'instagram' | 'facebook' | 'dribbble' | 'github' | 'website';
        /**
         * Full URL to the social media profile
         */
        url: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Optional section to promote open positions
   */
  hiringSection?: {
    show?: boolean | null;
    title?: string | null;
    description?: string | null;
    buttonText?: string | null;
    buttonLink?: {
      type?: ('reference' | 'custom') | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
    };
  };
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'relumeTeam';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeContactBlock".
 */
export interface RelumeContactBlock {
  contactMethods?:
    | {
        /**
         * Choose an icon to represent this contact method
         */
        icon: 'email' | 'phone' | 'location' | 'calendar' | 'message' | 'clock';
        /**
         * Heading for this contact method (e.g., "E-mail", "Telefoon")
         */
        title: string;
        /**
         * Brief description or context for this contact method
         */
        description: string;
        /**
         * The actual contact info (email, phone number, address, etc.)
         */
        contactInfo: string;
        /**
         * Optional link (mailto:, tel:, maps URL, etc.)
         */
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Choose a background color for this block
   */
  backgroundColor?:
    | (
        | ''
        | 'bg-[#FFFFFF]'
        | 'bg-[#F2F2F2]'
        | 'bg-[#B8B8B5]'
        | 'bg-[#656564]'
        | 'bg-[#000000]'
        | 'bg-[#EDF3F5]'
        | 'bg-[#B396AE]'
        | 'bg-[#4F758D]'
        | 'bg-[#3F5D70]'
        | 'bg-[#17252A]'
        | 'bg-[#E5F7F4]'
        | 'bg-[#40C7B8]'
        | 'bg-[#01B09A]'
        | 'bg-[#008C7B]'
        | 'bg-[#00432E]'
        | 'bg-[#FDF4FB]'
        | 'bg-[#F6EEE8]'
        | 'bg-[#F5E0DF]'
        | 'bg-[#C2BAB2]'
        | 'bg-[#484542]'
        | 'bg-[#FFF0F0]'
        | 'bg-[#FF7971]'
        | 'bg-[#FF6B68]'
        | 'bg-[#CC5555]'
        | 'bg-[#4C2020]'
        | 'bg-[#F2F8FC]'
        | 'bg-[#B2D5EA]'
        | 'bg-[#A6D2E4]'
        | 'bg-[#61A8BA]'
        | 'bg-[#353F43]'
      )
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'relumeContact';
}
/**
 * Comments submitted by visitors on blog posts
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments".
 */
export interface Comment {
  id: number;
  content: string;
  author: {
    name: string;
    email: string;
  };
  post: number | Post;
  /**
   * Comments must be approved before they appear publicly
   */
  isApproved?: boolean | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  title: string;
  serviceType: 'daycare' | 'municipality' | 'school' | 'parents' | 'general';
  description: string;
  heroImage: number | Media;
  benefits?:
    | {
        /**
         * Naam van het icoon (bijvoorbeeld: "check", "star", "heart")
         */
        icon?: string | null;
        title: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        title: string;
        description?: string | null;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  process?:
    | {
        step: number;
        title: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  pricing?: {
    hasCustomPricing?: boolean | null;
    /**
     * Prijs in euro's
     */
    price?: number | null;
    /**
     * Bijvoorbeeld: "Vanaf €500" of "Op aanvraag"
     */
    priceDescription?: string | null;
  };
  callToAction?: {
    title?: string | null;
    description?: string | null;
    buttonText?: string | null;
    buttonLink?: string | null;
  };
  testimonials?: (number | Testimonial)[] | null;
  relatedServices?: (number | Service)[] | null;
  publishedAt?: string | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team".
 */
export interface Team {
  id: number;
  name: string;
  /**
   * Bijvoorbeeld: "Oprichter & Media-adviseur", "Pedagogisch Expert"
   */
  role: string;
  image: number | Media;
  /**
   * Korte beschrijving van achtergrond en expertise
   */
  bio: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Bijvoorbeeld: "Schermtijd balans", "Pedagogische ontwikkeling"
   */
  expertise?:
    | {
        area: string;
        id?: string | null;
      }[]
    | null;
  qualifications?:
    | {
        qualification: string;
        institution?: string | null;
        year?: number | null;
        id?: string | null;
      }[]
    | null;
  socialMedia?: {
    linkedin?: string | null;
    twitter?: string | null;
    instagram?: string | null;
    website?: string | null;
  };
  /**
   * Bepaalt de volgorde waarin teamleden worden weergegeven
   */
  order: number;
  /**
   * Schakel uit om tijdelijk te verbergen zonder te verwijderen
   */
  active?: boolean | null;
  /**
   * Optionele quote om te tonen op de over-ons pagina
   */
  featuredQuote?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'comments';
        value: number | Comment;
      } | null)
    | ({
        relationTo: 'courses';
        value: number | Course;
      } | null)
    | ({
        relationTo: 'ageGroups';
        value: number | AgeGroup;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'team';
        value: number | Team;
      } | null)
    | ({
        relationTo: 'faq';
        value: number | Faq;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        features?: T | FeaturesBlockSelect<T>;
        newsletterCTA?: T | NewsletterCTABlockSelect<T>;
        testimonials?: T | TestimonialsBlockSelect<T>;
        faq?: T | FAQBlockSelect<T>;
        courseArchive?: T | CourseArchiveBlockSelect<T>;
        ageGroupsArchive?: T | AgeGroupsArchiveBlockSelect<T>;
        postsArchive?: T | PostsArchiveBlockSelect<T>;
        relumeHeader?: T | RelumeHeaderBlockSelect<T>;
        relumeLayout?: T | RelumeLayoutBlockSelect<T>;
        relumeCTA?: T | RelumeCTABlockSelect<T>;
        relumeGallery?: T | RelumeGalleryBlockSelect<T>;
        relumePricing?: T | RelumePricingBlockSelect<T>;
        relumeTeam?: T | RelumeTeamBlockSelect<T>;
        relumeContact?: T | RelumeContactBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock_select".
 */
export interface FeaturesBlockSelect<T extends boolean = true> {
  title?: T;
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsletterCTABlock_select".
 */
export interface NewsletterCTABlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  buttonText?: T;
  image?: T;
  privacyText?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  testimonials?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  faqs?: T;
  filterByCategory?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CourseArchiveBlock_select".
 */
export interface CourseArchiveBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  introContent?: T;
  populateBy?: T;
  targetAudience?: T;
  limit?: T;
  selectedCourses?: T;
  showCategories?: T;
  layout?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AgeGroupsArchiveBlock_select".
 */
export interface AgeGroupsArchiveBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  introContent?: T;
  populateBy?: T;
  selectedAgeGroups?: T;
  limit?: T;
  layout?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostsArchiveBlock_select".
 */
export interface PostsArchiveBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  introContent?: T;
  populateBy?: T;
  categories?: T;
  selectedPosts?: T;
  limit?: T;
  showCategories?: T;
  layout?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeHeaderBlock_select".
 */
export interface RelumeHeaderBlockSelect<T extends boolean = true> {
  variant?: T;
  title?: T;
  description?: T;
  primaryButton?:
    | T
    | {
        text?: T;
        link?: T;
        show?: T;
      };
  secondaryButton?:
    | T
    | {
        text?: T;
        link?: T;
        show?: T;
      };
  image?: T;
  backgroundImage?: T;
  imagePosition?: T;
  features?:
    | T
    | {
        text?: T;
        id?: T;
      };
  alignment?: T;
  overlayOpacity?: T;
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeLayoutBlock_select".
 */
export interface RelumeLayoutBlockSelect<T extends boolean = true> {
  variant?: T;
  tagline?: T;
  title?: T;
  description?: T;
  primaryButton?:
    | T
    | {
        text?: T;
        link?: T;
        variant?: T;
        show?: T;
      };
  secondaryButton?:
    | T
    | {
        text?: T;
        link?: T;
        variant?: T;
        show?: T;
      };
  mainImage?: T;
  imagePosition?: T;
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  columns?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        buttonText?: T;
        buttonLink?: T;
        id?: T;
      };
  textAlignment?: T;
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeCTABlock_select".
 */
export interface RelumeCTABlockSelect<T extends boolean = true> {
  variant?: T;
  title?: T;
  description?: T;
  image?: T;
  buttonText?: T;
  buttonVariant?: T;
  emailPlaceholder?: T;
  privacyText?: T;
  alignment?: T;
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeGalleryBlock_select".
 */
export interface RelumeGalleryBlockSelect<T extends boolean = true> {
  variant?: T;
  title?: T;
  description?: T;
  images?:
    | T
    | {
        image?: T;
        link?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumePricingBlock_select".
 */
export interface RelumePricingBlockSelect<T extends boolean = true> {
  tagline?: T;
  title?: T;
  description?: T;
  monthlyTabLabel?: T;
  yearlyTabLabel?: T;
  plans?:
    | T
    | {
        name?: T;
        monthlyPrice?: T;
        yearlyPrice?: T;
        yearlyDiscount?: T;
        features?:
          | T
          | {
              text?: T;
              id?: T;
            };
        buttonText?: T;
        buttonLink?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
            };
        id?: T;
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeTeamBlock_select".
 */
export interface RelumeTeamBlockSelect<T extends boolean = true> {
  tagline?: T;
  title?: T;
  description?: T;
  teamMembers?:
    | T
    | {
        photo?: T;
        name?: T;
        position?: T;
        bio?: T;
        id?: T;
      };
  socialLinks?:
    | T
    | {
        teamMember?: T;
        platform?: T;
        url?: T;
        id?: T;
      };
  hiringSection?:
    | T
    | {
        show?: T;
        title?: T;
        description?: T;
        buttonText?: T;
        buttonLink?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
            };
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RelumeContactBlock_select".
 */
export interface RelumeContactBlockSelect<T extends boolean = true> {
  contactMethods?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        contactInfo?: T;
        link?: T;
        id?: T;
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments_select".
 */
export interface CommentsSelect<T extends boolean = true> {
  content?: T;
  author?:
    | T
    | {
        name?: T;
        email?: T;
      };
  post?: T;
  isApproved?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses_select".
 */
export interface CoursesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  fullDescription?: T;
  image?: T;
  price?: T;
  duration?: T;
  targetAudience?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  sessions?:
    | T
    | {
        title?: T;
        description?: T;
        duration?: T;
        id?: T;
      };
  testimonials?: T;
  publishedAt?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ageGroups_select".
 */
export interface AgeGroupsSelect<T extends boolean = true> {
  title?: T;
  ageRange?: T;
  description?: T;
  heroImage?: T;
  order?: T;
  content?:
    | T
    | {
        title?: T;
        content?: T;
        image?: T;
        imagePosition?: T;
        id?: T;
      };
  tips?:
    | T
    | {
        tip?: T;
        id?: T;
      };
  resources?:
    | T
    | {
        title?: T;
        description?: T;
        link?: T;
        type?: T;
        id?: T;
      };
  faqs?: T;
  relatedCourses?: T;
  publishedAt?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  serviceType?: T;
  description?: T;
  heroImage?: T;
  benefits?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  features?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  process?:
    | T
    | {
        step?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  pricing?:
    | T
    | {
        hasCustomPricing?: T;
        price?: T;
        priceDescription?: T;
      };
  callToAction?:
    | T
    | {
        title?: T;
        description?: T;
        buttonText?: T;
        buttonLink?: T;
      };
  testimonials?: T;
  relatedServices?: T;
  publishedAt?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  company?: T;
  content?: T;
  rating?: T;
  avatar?: T;
  serviceUsed?: T;
  featured?: T;
  tags?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team_select".
 */
export interface TeamSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  image?: T;
  bio?: T;
  expertise?:
    | T
    | {
        area?: T;
        id?: T;
      };
  qualifications?:
    | T
    | {
        qualification?: T;
        institution?: T;
        year?: T;
        id?: T;
      };
  socialMedia?:
    | T
    | {
        linkedin?: T;
        twitter?: T;
        instagram?: T;
        website?: T;
      };
  order?: T;
  active?: T;
  featuredQuote?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq_select".
 */
export interface FaqSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  category?: T;
  tags?: T;
  order?: T;
  active?: T;
  helpful?: T;
  relatedQuestions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Configure the site header, logo, and main navigation.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  /**
   * Upload your site logo. Will be displayed in the header.
   */
  logo?: (number | null) | Media;
  /**
   * Add navigation links that will appear in the main header menu.
   */
  navItems?:
    | {
        type?: ('link' | 'dropdown') | null;
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        /**
         * Optional description for accessibility and tooltips
         */
        description?: string | null;
        /**
         * Highlight this navigation item (e.g., different styling)
         */
        featured?: boolean | null;
        /**
         * Configure the dropdown menu sections that appear when hovering/clicking this item
         */
        dropdownSections?:
          | {
              /**
               * Title for this section of the dropdown menu
               */
              title: string;
              links?:
                | {
                    /**
                     * Optional icon to display next to the link
                     */
                    icon?: (number | null) | Media;
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?: {
                        relationTo: 'pages';
                        value: number | Page;
                      } | null;
                      url?: string | null;
                      label: string;
                    };
                    /**
                     * Optional description shown below the link
                     */
                    description?: string | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Optional featured content area in the dropdown (like a highlighted blog post or promotion)
         */
        featuredContent?: {
          show?: boolean | null;
          title?: string | null;
          image?: (number | null) | Media;
          link?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
          };
          description?: string | null;
          backgroundColor?: ('default' | 'secondary' | 'muted') | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Optional prominent button in the header (e.g., "Contact Us", "Sign Up")
   */
  ctaButton?: {
    show?: boolean | null;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
    style?: ('primary' | 'secondary' | 'accent') | null;
  };
  /**
   * Display a search icon in the header navigation
   */
  showSearch?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings".
 */
export interface SiteSetting {
  id: number;
  siteName: string;
  siteDescription: string;
  defaultSEO?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
    ogImage?: (number | null) | Media;
  };
  analytics?: {
    /**
     * Bijvoorbeeld: G-XXXXXXXXXX
     */
    googleAnalyticsId?: string | null;
    /**
     * Bijvoorbeeld: GTM-XXXXXXX
     */
    googleTagManagerId?: string | null;
    facebookPixelId?: string | null;
  };
  maintenance?: {
    enabled?: boolean | null;
    message?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    /**
     * IP adressen die nog steeds toegang hebben tijdens onderhoud
     */
    allowedIPs?:
      | {
          ip?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  notifications?: {
    enabled?: boolean | null;
    type?: ('info' | 'warning' | 'success' | 'error') | null;
    message?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    dismissible?: boolean | null;
  };
  forms: {
    /**
     * E-mailadres waar contactformulieren naartoe gestuurd worden
     */
    contactEmail: string;
    /**
     * Welke service gebruik je voor de nieuwsbrief?
     */
    newsletterProvider?: ('mailchimp' | 'convertkit' | 'klaviyo' | 'custom') | null;
    /**
     * Voor spam bescherming op formulieren
     */
    recaptchaSiteKey?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Manage site-wide colors, fonts, and design system settings.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "styleSettings".
 */
export interface StyleSetting {
  id: number;
  /**
   * Define the available background colors for blocks. These will appear as options in all block configurations.
   */
  backgroundColors?:
    | {
        /**
         * Display name for this color (e.g., "Persian Green Light", "Neutral Dark")
         */
        name: string;
        /**
         * CSS color value (e.g., "#01B09A", "rgb(1, 176, 154)", or CSS class like "bg-primary")
         */
        value: string;
        /**
         * Group colors by category for better organization
         */
        category?:
          | ('neutrals' | 'smalt-blue' | 'persian-green' | 'merino' | 'bittersweet' | 'regent-st-blue' | 'other')
          | null;
        /**
         * Shade level for better organization (optional)
         */
        shade?: ('lightest' | 'lighter' | 'light' | 'base' | 'dark' | 'darker' | 'darkest') | null;
        /**
         * Check this to make this the default background color for new blocks
         */
        isDefault?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Define text colors for typography and content blocks.
   */
  textColors?:
    | {
        name: string;
        value: string;
        usage?: ('headings' | 'body' | 'links' | 'accent' | 'muted') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Define available font families for the site.
   */
  fontFamilies?:
    | {
        /**
         * Display name (e.g., "Primary Heading Font", "Body Text")
         */
        name: string;
        /**
         * CSS font-family value (e.g., "Inter, sans-serif", "font-heading")
         */
        cssValue: string;
        category?: ('headings' | 'body' | 'display' | 'mono') | null;
        weights?:
          | {
              /**
               * e.g., "Regular", "Medium", "Bold"
               */
              name?: string | null;
              /**
               * e.g., "400", "500", "700", "font-medium"
               */
              value?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Check this for the default font family
         */
        isDefault?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Define typography scale for consistent sizing.
   */
  fontSizes?:
    | {
        /**
         * e.g., "Heading 1", "Body Large", "Caption"
         */
        name: string;
        /**
         * e.g., "2.5rem", "18px", "text-xl"
         */
        value: string;
        category?: ('display' | 'heading' | 'body' | 'caption') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Define consistent spacing values for margins, padding, and gaps.
   */
  spacing?:
    | {
        /**
         * e.g., "Extra Small", "Medium", "Large"
         */
        name: string;
        /**
         * e.g., "8px", "1rem", "space-4"
         */
        value: string;
        /**
         * e.g., "Button padding", "Section margins"
         */
        usage?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  navItems?:
    | T
    | {
        type?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        description?: T;
        featured?: T;
        dropdownSections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    icon?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                        };
                    description?: T;
                    id?: T;
                  };
              id?: T;
            };
        featuredContent?:
          | T
          | {
              show?: T;
              title?: T;
              image?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              description?: T;
              backgroundColor?: T;
            };
        id?: T;
      };
  ctaButton?:
    | T
    | {
        show?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        style?: T;
      };
  showSearch?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  siteName?: T;
  siteDescription?: T;
  defaultSEO?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
      };
  analytics?:
    | T
    | {
        googleAnalyticsId?: T;
        googleTagManagerId?: T;
        facebookPixelId?: T;
      };
  maintenance?:
    | T
    | {
        enabled?: T;
        message?: T;
        allowedIPs?:
          | T
          | {
              ip?: T;
              id?: T;
            };
      };
  notifications?:
    | T
    | {
        enabled?: T;
        type?: T;
        message?: T;
        dismissible?: T;
      };
  forms?:
    | T
    | {
        contactEmail?: T;
        newsletterProvider?: T;
        recaptchaSiteKey?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "styleSettings_select".
 */
export interface StyleSettingsSelect<T extends boolean = true> {
  backgroundColors?:
    | T
    | {
        name?: T;
        value?: T;
        category?: T;
        shade?: T;
        isDefault?: T;
        id?: T;
      };
  textColors?:
    | T
    | {
        name?: T;
        value?: T;
        usage?: T;
        id?: T;
      };
  fontFamilies?:
    | T
    | {
        name?: T;
        cssValue?: T;
        category?: T;
        weights?:
          | T
          | {
              name?: T;
              value?: T;
              id?: T;
            };
        isDefault?: T;
        id?: T;
      };
  fontSizes?:
    | T
    | {
        name?: T;
        value?: T;
        category?: T;
        id?: T;
      };
  spacing?:
    | T
    | {
        name?: T;
        value?: T;
        usage?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}